import { Injectable } from "@angular/core";
import * as io from "socket.io-client";
import { environment } from "../../environments/environment";
import { AuthService } from "./auth.service";
import { Observable, timer } from "rxjs";

export enum EventType {
  IncomingMessage = "IncomingMessage",
  GameChanged = "GameChanged",
  UserUpdate = "UserUpdate" // Generated by polling client-side
}

export interface Event {
  type: EventType;
  userId: string;
}

@Injectable()
export class EventsService {
  constructor(private authService: AuthService) {}

  getEvents() {
    return new Observable<Event>(observer => {
      const socket = io(environment.socketUrl);

      socket.on("connect", () => {
        socket.on("authenticated", () => {
          // console.log("socket auth ok");
        });

        socket.emit("authentication", this.authService.getToken());

        socket.on("event", (event: string) => {
          observer.next(JSON.parse(event));
        });

        timer(0, 3000).subscribe(_ =>
          observer.next({ type: EventType.UserUpdate, userId: "" })
        );
      });
    });
  }
}
