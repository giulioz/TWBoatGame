swagger: "2.0"
info:
  version: 1.0.0
  title: SeaDuelServer
  description: SeaDuelServer
basePath: /api/v1
tags:
  - name: Authentication
    description: Login and registration
  - name: Users
    description: Users info

consumes:
  - application/json
produces:
  - application/json

definitions:
  User:
    type: object
    title: User
    properties:
      id:
        type: string
        description: "Username"
      email:
        type: string
        format: "email"
      password:
        type: string
      role:
        type: string
        enum: 
          - user
          - administrator
      registrationDate:
        type: string
        format: "date-time"
      hasUnreadMessages:
        type: boolean
      hasUnreadGames:
        type: boolean
      state:
        type: string
        enum: 
          - offline
          - online
          - playing
          - none
      wonGames:
        type: number
      lostGames:
        type: number
        description: "Lost or withdrawn"
      playedGames:
        type: number
      position:
        type: number
        description: "Position in ranking"

  Game:
    type: object
    title: Game
    properties:
      gameId:
        type: string
      initiatorId:
        type: string
        description: "UserId of who started the game"
      opponentId:
        type: string
        description: "UserId of who accepted the game, -1 if to open match"
      state:
        type: string
        enum:
          - WaitingForResponse
          - Rejected
          - BoatsPositioning
          - InitiatorTurn
          - OpponentTurn
          - Ended
      winnerId:
        type: string
        description: "UserId of the winner, -1 if still playing"
      initiatorBoard:
        type: object
        description: "GameBoard type"
      opponentBoard:
        type: object
        description: "GameBoard type"

  GameBoard:
    type: object
    title: GameBoard
    properties:
      boardData:
        type: array
        description: "Array of GameBoardElement"
      width:
        type: number
      height:
        type: number

  GameBoardElement:
    type: object
    title: GameBoardElement
    properties:
      type:
        type: string
        enum:
          - Empty
          - Destroyer
          - Submarine
          - Battleship
          - AircraftCarrier
    checked:
      type: boolean
        
  Message:
    type: object
    title: Message
    properties:
      messageId:
        type: string
      senderId:
        type: string
      recipientId:
        type: string
      content:
        type: string
      time:
        type: date-time

  Event:
    type: object
    title: Event
    properties:
      type:
        type: string
        enum:
          - IncomingMessage
          - IncomingGameRequest
          - GameStateChanged
          - GameBoardChanged
    data:
      type: object

paths:
  /users:
    get:
      tags:
        - Examples
      description: Fetch all examples
      responses:
        200:
          description: Returns all examples
    post:
      tags:
        - Examples
      description: Create a new example
      parameters:
        - name: body
          in: body
          description: number of items to skip
          required: true
          schema: 
            $ref: "#/definitions/User"
      responses:
        200:
          description: Returns all examples

  /examples/{id}:
    get:
      tags:
        - Examples
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: integer
      responses:
        200:
          description: Return the example with the specified id
        404:
          description: Example not 
